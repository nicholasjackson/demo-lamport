syntax = "proto3";

import "proto/common/v1/common.proto";

package proto.server.v1;

option go_package = "github.com/nicholasjackson/demo-lamport/byzantine_generals/gen/proto/server/v1;serverv1";

message Data {
  string label = 1;
}

message Node {
  string id = 1;
  string type = 2;
  Data data = 3;
  string source_position = 4;
  string target_position = 5;
  bool is_traitor = 6;
}

message NodesResponse {
  repeated Node nodes = 1;
}

message Marker {
  string type = 1;
}

message Edge {
  string id = 1;
  string source = 2;
  string target = 3;
  string label = 4;
}

message EdgesResponse {
  repeated Edge edges = 1;
}

message CommandResponse {
  string message = 1;
}

message CommandSentRequest {
  string command = 1;
  string from = 2;
  string to = 3;
  int32 round = 4;
}

message Decision {
  int32 round = 1;
  string from = 2;
  string decision = 3;
  repeated proto.common.v1.Command commands = 4;
}

message DecisionsRequest {
  bool all_data = 1;  
}

message DecisionsResponse {
  repeated Decision decisions = 1;
}

service CommanderService {
  // Reset resets the state of the generals and commanders
  rpc Reset(proto.common.v1.EmptyRequest) returns (proto.common.v1.EmptyResponse) {}
  // IssueCommand sends a command to the generals
  rpc IssueCommand(proto.common.v1.EmptyRequest) returns (CommandResponse) {}
  // DecisionMade is called when a decision has been made by the generals
  rpc DecisionMade(Decision) returns (proto.common.v1.EmptyResponse) {}
  // Returns the nodes in the graph, used by the UI
  rpc Nodes(proto.common.v1.EmptyRequest) returns (NodesResponse) {}
  // Returns the edges in the graph, used by the UI
  rpc Edges(proto.common.v1.EmptyRequest) returns (EdgesResponse) {}
  // Returns the decisions made by the generals
  rpc Decisions(DecisionsRequest) returns (DecisionsResponse) {}
}